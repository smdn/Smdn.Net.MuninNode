<!--
SPDX-FileCopyrightText: 2021 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
-->
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>netstandard2.1;net8.0</TargetFrameworks>
    <VersionPrefix>2.5.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <PackageValidationBaselineVersion>2.0.0</PackageValidationBaselineVersion>
    <NoWarn>CS1591;$(NoWarn)</NoWarn> <!-- CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member' -->
  </PropertyGroup>

  <PropertyGroup Label="assembly attributes">
    <Description>
<![CDATA[A .NET implementation of [Munin-Node](https://guide.munin-monitoring.org/en/latest/node/index.html) and [Munin-Plugin](https://guide.munin-monitoring.org/en/latest/plugin/index.html).

This library provides Munin-Node implementation for .NET, which enables to you to create custom Munin-Node using the .NET languages and libraries.

This library also provides abstraction APIs for implementing Munin-Plugin. By using Munin-Plugin APIs in combination with the Munin-Node implementation, you can implement the function of collecting various kind of telemetry data using Munin, with .NET.
]]>
    </Description>
    <CopyrightYear>2021</CopyrightYear>
  </PropertyGroup>

  <PropertyGroup Label="package properties">
    <PackageTags>Munin,Munin-Node,Munin-Plugin</PackageTags>
    <GenerateNupkgReadmeFileDependsOnTargets>$(GenerateNupkgReadmeFileDependsOnTargets);GenerateReadmeFileContent</GenerateNupkgReadmeFileDependsOnTargets>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.IO.Pipelines" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="8.0.0" />
    <PackageReference Include="Smdn.Fundamental.Encoding.Buffer" Version="[3.0.0,4.0.0)" Condition="$(TargetFramework.StartsWith('net4')) or $(TargetFramework.StartsWith('netstandard'))" />
    <PackageReference Include="Smdn.Fundamental.Exception" Version="[3.0.0,4.0.0)" Condition="$(TargetFramework.StartsWith('netstandard'))" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="$(MSBuildThisFileDirectory)..\Common\Shim\System\ArgumentExceptionShim.cs"/>
    <Compile Include="$(MSBuildThisFileDirectory)..\Common\Shim\System\ArgumentOutOfRangeExceptionShim.cs"/>
  </ItemGroup>

  <Target Name="GenerateReadmeFileContent">
    <PropertyGroup>
      <PackageReadmeFileContent><![CDATA[# $(PackageId) $(PackageVersion)
$(Description)

## Getting started
First, add the [$(PackageId)](https://www.nuget.org/packages/$(PackageId)) package and any other packages you need to the project file.

```
dotnet add package $(PackageId)
dotnet add package Microsoft.Extensions.DependencyInjection
dotnet add package Microsoft.Extensions.Logging.Console
```

Using the API of the `Smdn.Net.MuninNode.DependencyInjection` namespace and the `ServiceCollection`, you can configure and run a Munin-Node the following way.

```cs
$([System.IO.File]::ReadAllText('$(MSBuildThisFileDirectory)..\..\examples\$(PackageId)\getting-started\Program.cs').TrimEnd())
```

More examples can be found on the [GitHub repository]($(RepositoryUrl)/tree/main/examples/$(PackageId)/), including examples of using library features.

## Contributing
This project welcomes contributions, feedbacks and suggestions. You can contribute to this project by submitting [Issues]($(RepositoryUrl)/issues/new/choose) or [Pull Requests]($(RepositoryUrl)/pulls/) on the [GitHub repository]($(RepositoryUrl)).
]]></PackageReadmeFileContent>
    </PropertyGroup>
  </Target>
</Project>
